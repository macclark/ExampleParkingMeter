/// Parking Meter by Mac Clark. The solution works exactly except for the Date functions. 

/// This is a partial build using a text file for a form based version that works.  

///The meter has two possible customer inputs - a maximum amount of money to debit from a card, or an option to charge for the maximum time available on that meter.

///The program should calculate the minutes purchased, debit the card the correct amount, and print a ticket containing the parking end time, actual amount charged, and number of minutes purchased.

///Fees are charged at $1.75 per hour

///Different meters have different time limits (1 hour, 2 hours, 3 hours, 5 hours,and 30 minutes)

///Meters are only valid from 7am to 7pm Monday to Saturday, and 1pm to 7pmSundays.

///Only charge up to the permitted time limit and during the valid daily hours for a meter

///Do not overcharge, for example, a $10 amount on a 1 hour limit meter should only charge for 1 hour

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ParkingMeterTicket
{
    public partial class Form1ParkingMeter : Form
    {
        public Form1ParkingMeter()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            
            double varRadioButton30MinFloat = 0.875;
            double varRadioButtonOneHourFloat = 1.75;
            double varRadioButtonTwoHourFloat = 3.5;
            double varRadioButtonThreeHourFloat = 5.25;
            double varRadioButtonFiveHourFloat = 8.75;
            double varRadioButton = 0;
            
            //This section checks radio buttons to see if they are checked of the first line used for which meter are you. If it is checked then the var value is used that corresponds
            if (radioButtonThirtyMinutes.Checked == true)
            {
                
                varRadioButton = varRadioButton30MinFloat;
            }
            else
            {
                
            }
            if (radioButtonOneHour.Checked == true)
            {
                
                varRadioButton = varRadioButtonOneHourFloat;
            }
            else
            {
              
            }
            if (radioButtonTwoHours.Checked == true)
            {
               
                varRadioButton = varRadioButtonTwoHourFloat;
            }
            else
            {
              
            }
            if (radioButtonThreeHours.Checked == true)
            {
                
                varRadioButton = varRadioButtonThreeHourFloat;
            }
            else
            {
                
            }
            if (radioButtonFiveHours.Checked == true)
            {
                
                varRadioButton = varRadioButtonFiveHourFloat;
            }
            else
            {
                
            }
            // Next section is for checking to see both the money radio button and the amount are selected. It then checks against to make sure overcharges don't occur but seeing if the value is greater or equal. This is so a ten dollar amount on a one hour meter only charges one dollar
            if (radioButtonMoney.Checked && radioButton50Cents.Checked == true )
            {
                    if (varRadioButton  >= .50)
                    {

                        varRadioButton = .50;
                    }
                    else
                    {

                    }
                
            }
            else
            {
                
            }
             if (radioButtonMoney.Checked && radioButtonOneDollar.Checked == true )
            {
                    if (varRadioButton >= 1)
                   {

                       varRadioButton = 1.00;
                   }
                    else
                   {

                   }    
               
            }
            else
            {
                
            }
             if (radioButtonMoney.Checked && radioButtonTwoDollars.Checked == true )
            {
                    if (varRadioButton >= 2)
                    {

                        varRadioButton = 2.00;
                    }
                    else
                    {

                    }  
                   
            }
            else
            {
                
            }
             if (radioButtonMoney.Checked && radioButtonFiveDollars.Checked == true)
             {
                     if (varRadioButton >= 5)
                     {

                          varRadioButton = 5.00;
                     }
                     else
                     {

                     }  
                     
             }
             else
             {

             }
             if (radioButtonMoney.Checked && radioButtonTenDollars.Checked == true)
             {
                     if (varRadioButton >= 10)
                     {

                     varRadioButton = 10.00;
                     }
                     else
                     {

                     }  
                     
                
             }
             else
             {

             }

             DateTime time = DateTime.Now;              // Use current time
             string format = "MMM ddd d HH:mm yyyy";    // Use this format for Date time function and turn into string
        
             MessageBox.Show(string.Format("You are charged ${0}", varRadioButton),"Results", MessageBoxButtons.OK); // This returns the Message Box for the amount charged
            
             MessageBox.Show(string.Format("You used {0} minutes", varRadioButton / 1.75 * 60), "Results", MessageBoxButtons.OK); // This returns the Message Box for minutes used
            MessageBox.Show(time.ToString(format)); // This is the Message Box for Dates
            
            
        }
        //This function is for the calendar in order to pick days for correct parking - needed to expand to finish project
        private void dateTimePicker1_ValueChanged(object sender, EventArgs e)
        {
        label1.Text=String.Format("New date: {0}", dateTimePicker1.Text);

        }

        
        private void label3_Click(object sender, EventArgs e)
        {

        }


        //These panels are used to separate out the different radio buttons so they aren't mashed together
        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }



        private void panel2_Paint(object sender, PaintEventArgs e)
        {

        }


        private void panel3_Paint(object sender, PaintEventArgs e)
        {

        }

        //Below are all the radio buttons, etc 
        public void radioButton50Cents_CheckedChanged(object sender, EventArgs e)
        {
        
        }
       
        
        
        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButton2_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButton3_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonThreeHours_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonFiveHours_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonTime_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonMoney_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonOneDoller_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonTwoDollars_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonFiveDollars_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButtonTenDollars_CheckedChanged(object sender, EventArgs e)
        {

        }
    }
}
